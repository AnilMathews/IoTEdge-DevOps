# IoT Edge CI Build Definition
# Build your IoT Edge Modules in Azure DevOps
# https://aka.ms/yaml

pool:
  name: Hosted Ubuntu 1604
  
steps:
- task: CopyFiles@2
  displayName: 'Copy unaltered source to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '/**/*.*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in deployment.template.json'
  inputs:
    rootDirectory: EdgeSolution
    targetFiles: deployment.template.json

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in modules/**/module.json'
  inputs:
    rootDirectory: EdgeSolution
    targetFiles: 'modules/**/module.json'

- task: AzureIoTEdge@2
  displayName: 'Azure IoT Edge - Build module images'
  inputs:
    deploymentid: 'azuredevops-deployment'
- task: AzureIoTEdge@2
  inputs:
    action: 'Push module images'
    containerregistrytype: 'Azure Container Registry'
    azureSubscriptionEndpoint: 'Visual Studio Professional Subscription (3737a88a-5c4a-4fc0-b5ec-7c08d5054b82)'
    azureContainerRegistry: '{"loginServer":"fordockerimagedev.azurecr.io", "id" : "/subscriptions/3737a88a-5c4a-4fc0-b5ec-7c08d5054b82/resourceGroups/rg-TestDev/providers/Microsoft.ContainerRegistry/registries/fordockerImagedev"}'
    templateFilePath: 'deployment.template.json'
    defaultPlatform: 'windows-amd64'
    fillRegistryCredential: 'true'
    templateFilePath: EdgeSolution/deployment.template.json

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'